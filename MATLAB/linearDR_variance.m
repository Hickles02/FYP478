%% Linear Data Reconciliation - Variance Analysis
% This main function loads the true data generated by simulating the model of
% the binary distillation column. It then artificially corrupts the true
% data (using measureReal). Subsequently, it performs DR (for AVM) for various
% different variance values. Lastly, it evaluates the effect of increasing
% varaince on the peformance of DR.

% Key:
% AVM - All Variables Measured 
% SVM - Some Variables Measured
% MAPE - Mean Absolute Percentage Error

%% Initialise
clear
clc
clf

%% Load data
load('true_data', 'MM', 'X', 'tSol', 'true_data', 'v', 'p', 'u')

%% Measurements with Variance
% The function measureReal artificially corrupts the true data
variance = linspace(0.005,5,100);     % The different values that were used

% Pre-allocation - For speed
mapeM    = zeros(100,1);
mape_avm = zeros(100,1);
mapeDiff = zeros(100,1);
resM     = zeros(100,1001);
res_avm  = zeros(100,1001);
LB_avm   = zeros(100,1001);

for i = 1:100
    [measured_data, time] = measureReal(MM, X, v, u, p, tSol, variance(i));

    % Measurement matrix - Matrix with all variables measured
    measurements = [measured_data.L1; measured_data.LB; measured_data.LD; measured_data.LR;...
                    measured_data.V0; measured_data.V1; measured_data.LF];

    % Variance Matrix
    W = varianceMatrix(7, variance(i));

    % The A matrix
    % The System of Equations
    % 1. LF - LD - LB           = 0
    % 2. L1 - LB - V0           = 0
    % 3. V4 - LR - LD           = 0

    %    L1 LB LD LR V0 V4 LF
    A = [+0 -1 -1 +0 +0 +0 +1;...
         +1 -1 +0 +0 -1 +0 +0;...
         +0 +0 -1 -1 +0 +1 +0];

    % Linear DR - AVM 
    xhat = measurements - (W\A')*((A*(W\A'))\(A*measurements));
    LB_avm(i,:) = xhat(2,:);

    % Error metrics
    % MAPE - Mean Absolute Percentage Error
    mapeM(i,:)    = mean(100*abs((true_data.LB(:,100:end) - measured_data.LB(:,100:end))./true_data.LB(:,100:end))); %mean((true_data.LB - measured_data.LB).^2);
    mape_avm(i,:) = mean(100*abs((true_data.LB(:,100:end) - LB_avm(i,100:end))./true_data.LB(:,100:end))); %mean((true_data.LB - LB_avm).^2);  
    mapeDiff(i,:) = mapeM(i,:) - mape_avm(i,:);
    
    % res - Residules
    resM(i,:) = true_data.LB - measured_data.LB;
    res_avm(i,:) = true_data.LB - LB_avm(i,:);
end

%% Plot Results
subplot(1,1,1)
patch([variance fliplr(variance)], [mapeM' fliplr(mape_avm')], 'y')
hold on
plot(variance, mapeM, 'r', variance, mape_avm, 'b')
hold off
xlabel("Variance"); ylabel("mapeValue")
legend("Difference","Measurements","Data Reconciliation")
title("Comparison of MAPE values between measurements and DR")
sgtitle("Plots illustrating the effect of DR with increasing variance")

%% Save Data
save('linearDR_data', 'mape_avm', 'mapeM')
